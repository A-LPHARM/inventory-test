apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-cron
data:
  backup.sh: |
    #!/bin/bash
    TIMESTAMP=$(date +"%F-%T")
    BACKUP_DIR="/backups/mongo_backup_${TIMESTAMP}"
    mkdir -p ${BACKUP_DIR}

    # Dump MongoDB Database
    mongodump --host mongo --port 27017 --username root --password passVerify --db inventory --out ${BACKUP_DIR}

    # Upload backup to S3
    aws s3 cp ${BACKUP_DIR} s3://<your-bucket-name>/ --recursive

    # Clean up backups older than 30 days
    find /backups -type f -mtime +30 -exec rm {} \;

  cron-job: |
    # Backup every day at 2am
    0 2 * * * root /bin/bash /usr/local/bin/aws/backup.sh

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      serviceAccountName: mongo-backup  # Ensure the pod uses the service account with S3 access
      containers:
      - name: mongo
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: passVerify
        - name: MONGO_INITDB_DATABASE
          value: inventory
        volumeMounts:
        - mountPath: /data/db
          name: mongo-data
        - mountPath: /usr/local/bin/aws
          name: aws-cli-bin
        - mountPath: /etc/cron.d
          name: backup-cron
        restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: mongo-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
      storageClassName: gp2  # AWS EBS
  volumes:
  - name: aws-cli-bin
    emptyDir: {}
  - name: backup-cron
    configMap:
      name: backup-cron
